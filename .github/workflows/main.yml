name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Define Python DLL path
      run: echo 'PYTHON_DLL_PATH=$(python -c "import os; import sys; print(os.path.dirname(sys.executable))")' >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Create Executable
      run: |
        pyinstaller -y -w --add-data "version.json;." --add-data "config.ini;." --add-data "theme.qss;." --add-data "winsparkle_wrapper.py;." --add-data "LICENSE.md;." --add-data "README.md;." --add-data "requirements.txt;." --add-data "WinSparkle.dll;." --paths "app" --paths "resources" --paths ".github" main.py

    - name: Zip the Executable Directory
      run: |
        Compress-Archive -Path dist/main -DestinationPath dist/main.zip

    - name: Bump version and push tag
      id: create_tag
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: patch

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.new_tag }}
        release_name: Release ${{ steps.create_tag.outputs.new_tag }}
        body: Dernière version à jour de l'application Metals_Prices.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main.zip
        asset_name: main.zip
        asset_content_type: application/zip

    - name: Update JSON
      run: |
        echo '{
            "version": "${{ steps.create_tag.outputs.new_tag }}",
            "url": "https://github.com/Adrizen89/metals-prices/releases/download/${{ steps.create_tag.outputs.new_tag }}/main.exe"
        }' > version.json
        # Configurer Git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Commit et push le fichier JSON mis à jour
        git add version.json
        git commit -m "Update version.json for release ${{ steps.create_tag.outputs.new_tag }}"
        git push
